import os
import openai
from datetime import datetime, timedelta
from google.oauth2 import service_account
from googleapiclient.discovery import build

# Replace with your OpenAI API key
api_key = os.environ.get('OPENAI_API_KEY')

# Replace with the path to your Google Calendar API credentials JSON file
google_calendar_credentials = 'C:\\Users\\arnit\\Downloads\\client_secret_815749646197-aktf2qbnqmij4bliavk9aeir5ml0rqdt.apps.googleusercontent.com.json"'

def chat_with_gpt(input_text):
    response = openai.Completion.create(
        engine="gpt-3.5-turbo-instruct",  # You can use a different engine if needed
        prompt=input_text,
        max_tokens=500,  # Adjust this as per your desired response length
        api_key=api_key
    )

    return response.choices[0].text.strip()

def create_google_calendar_event(title, description, start_time, end_time, calendar_id, credentials):
    service = build('calendar', 'v3', credentials=credentials)

    event = {
        'summary': title,
        'description': description,
        'start': {
            'dateTime': start_time,
            'timeZone': timezone,  # Replace with your time zone
        },
        'end': {
            'dateTime': end_time,
            'timeZone': timezone,  # Replace with your time zone
        },
    }

    # Create the event in the specified calendar
    event = service.events().insert(calendarId=calendar_id, body=event).execute()
    
    # Get the event ID and generate a shareable link
    event_id = event['id']
    event_link = f'https://calendar.google.com/calendar/r/event?eid={event_id}'
    
    return event_link

def create_and_share_public_calendar(credentials):
    service = build('calendar', 'v3', credentials=credentials)
    
    # Create a new calendar
    calendar = {
        'summary': 'Personalized Schedule for Learning ' + learn,
        'description': 'This calendar was created by a bot. It contains a personalized schedule for learning ' + learn + ' for ' + level + ' in ' + days + ' days.',
        'timeZone': timezone,  # Replace with your time zone
    }
    
    created_calendar = service.calendars().insert(body=calendar).execute()
    calendar_id = created_calendar['id']
    
    # Make the calendar public
    rule = {
        'scope': {
            'type': 'default',
        },
        'role': 'reader',
    }
    service.acl().insert(calendarId=calendar_id, body=rule).execute()
    
    return calendar_id

if __name__ == "__main__":
    learn = input("What do you want to learn? (Use this format: Python): ")
    level = input("What is your level? (Beginner, Intermediate, Advanced): ")
    days = input("How many days do you want to learn this skill in? (Use this format: 3): ")
    timezone = input("What is your timezone? (Use this format: EST, PST, etc.): ")
    print()
    user_input = "Make me a " + days + " day schedule for learning " + learn + " for " + level + " Do not combine 2 days together. Give me just the days and the title together and then the task (Only One Task a Day.) to be performed that day as a single sentence. Also, include helpful urls on the task sentence. Precede day with a # and the tasks with a *. Give me just a txt file as output."
    response = chat_with_gpt(user_input)

    # Initialize empty arrays for titles and tasks
    titles = []
    tasks = []

    # Your text data
    schedule_text = response

    # Split the text into lines
    lines = schedule_text.split('\n')

    # Iterate through the lines and extract titles and tasks
    for line in lines:
        line = line.strip()
        if line.startswith('#'):
            titles.append(line)
        elif line.startswith('*'):
            tasks.append(line)

    # Replace with your Google Calendar API credentials JSON file
    credentials = service_account.Credentials.from_service_account_file('C:\\Users\\arnit\\Downloads\\haclts\\hackrpi-404120-8dc53c682480.json')

    # Calculate the start date for the schedule
    start_date = datetime.now()  # You can adjust the start date as needed

    # Create and share a public calendar
    calendar_id = create_and_share_public_calendar(credentials)

    for i in range(len(titles)):
        title = titles[i].lstrip('#').strip()
        task = tasks[i].lstrip('*').strip()
        
        # Calculate start and end times for the event (whole day event starting from 00:00 and ending at 23:59)
        start_time = start_date.strftime('%Y-%m-%dT00:00:00')
        end_date = start_date + timedelta(days=1)
        end_time = end_date.strftime('%Y-%m-%dT23:59:59')
        
        # Create a Google Calendar event for each day's schedule in the shared calendar
        event_link = create_google_calendar_event(title, task, start_time, end_time, calendar_id, credentials)
        
        # Move to the next day
        start_date = end_date

    print(f"Google Calendar events have been created in the shared calendar.") 
    print(f"You can find the calendar at this link: https://calendar.google.com/calendar/r?cid={calendar_id}")